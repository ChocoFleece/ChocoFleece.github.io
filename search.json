[{"title":"微信与TG互通 基于EFB的ComWechat搭建教程","url":"/2023/10/04/efbwechattg/","content":"起因\n由于众所周知的原因，微信在除了IOS系统上之外，只有一个残废的FCM推送，这个推送会在收到消息时唤醒微信…然后再通过微信的信息通道推送给手机，这完全失去了使用推送的意义。因此有人开始研究将微信的消息转发到Telegram上，这篇文章将为你介绍详细的步骤。\n\n优势首先我们需要明确Tg相比于微信优势在哪里。1.永久的云端消息记录存储Tg拥有永久的云端消息记录存储，并且按照Tg那边的说法，你的信息是很安全的(这个看个人，详情请搜索Tg信息保护相关内容)。2.多端登陆账号Tg可以在很多客户端上登陆账号且没有数量限制。你可以在手机上登陆一个、电脑上登陆一个、平板上登陆一个、甚至虚拟机里登陆一个。3.占用更小、耗电更少Tg拥有十分丝滑的体验，尤其是各种开源的第三方客户端，Tg仅仅只需要占用200M上下的RAM即可，而微信即使没有联系人，也需要占用将近2G的RAM，差距巨大。并且Tg并不需要保留后台，可以享受到推送服务。\n介绍因此将微信的消息转发到Tg上是一个很优秀的方案，同时也可以将Tg与微信的联系人合并方便联系。本文使用了 ComWechat 服务作为从端，使用的 API 为微信桌面端，这意味着使用此服务将无法使用微信桌面端，因为微信限制同时只能在线一台设备。如有使用需求请自行考虑，本教程对产生的一切后果不负任何责任。\n前提环境1.一台在 国外(或能够进行外网访问) 的 VPS，架构为 X86，ARM 架构大概率无法部署。推荐系统为 Ubuntu ，下文以此系统为例要求 VPS 运行内存不小于 2G，且最好再开启 2G 的交换内存实测内存占用与微信好友数量成正比，好友数与群聊数相加小于100个的情况下，原生2G内存足矣VPS拥有一个固定公网 iPv4 地址2. 一台最好系统为 Windows 的电脑 (需要使用 VNC 服务，其他系统理论也可以)3. 一部拥有微信的手机或能够进行微信扫码的设备（扫码登录远程微信用）4. 最好两个 Telegram 账号，要求互为好友且至少有一个能正常登陆5. 一个正常的大脑，一双正常的眼睛，善于举一反三的思维6. 在提出问题之前请仔细、反复地再阅读一遍教程\n准备创建机器人 Token首先在手机 Telegram 或桌面端 Telegram 应用程序中进行如下操作\n\n对 @BotFather 或点击 这段文字 来对 BotFather 进行私聊\n发送指令\n\n/newbot\n\n在创建完毕之后，你将获取到一串 Bot 的 API Token，将之保存在一处地方，不要将他泄露给其他人，因为通过 Token 任何人都可以控制你的 Bot。\n\n然后依据提示进行机器人的用户名、昵称等配置\n\n机器人用户名须以 bot 结尾\n\n\n接着进行两项基础配置，继续向 BotFather 发送下列命令\n\n\n/setprivacy#选择 “Disable”/setjoingroups#选择 “Enable”/setprivacy#选择 “Disable”/setjoingroups#选择 “Enable”\n\n\n接着进行最后一项配置，发送\n\n/setcommands\n然后发送下面的内容\nlink - 将会话绑定到 Telegram 群组chat - 生成会话头recog - 回复语音消息以进行识别update_info - 更新群组名与头像extra - 获取更多功能\n\n获取用户 ID与 @get_id_bot 私聊或点击 这段文字 来对 Get ID Bot 进行私聊，发送\n/start\n获取用户 ID，将之保存到一处地方\n配置服务器初始化可不做这一步，一般没问题，速度慢请查询换源相关，或查询VPS带宽限制\nsudo apt updatesudo apt upgrade\n\n安装 Dockercurl -fsSL https://get.docker.com | bash\n\n安装 Docker-composeapt -y install docker-compose\n创建配置文件 docker-compose.yaml\nmkdir comwechattouch docker-compose.yaml\n使用vim&#x2F;nano等工具编辑该文件\nnano docker-compose.yaml\n输入以下内容\nversion: &#x27;3.3&#x27;services:    wechatpchook:        container_name: comwechat        environment:            - VNCPASS=YourPassword            - COMWECHAT=https://github.com/ljc545w/ComWeChatRobot/releases/download/3.7.0.30-0.1.0-pre/3.7.0.30-0.1.0-pre.zip        volumes:            - &quot;/root/WeChat/Files/:/home/user/.wine/drive_c/users/user/My Documents/WeChat Files/&quot;            - &quot;/root/WeChat/Data/:/home/user/.wine/drive_c/users/user/Application Data/&quot;        privileged: true        network_mode: host        image: tomsnow1999/docker-com_wechat_robot:latest\n\n注：大部分 SSH 客户端可以使用右键粘贴剪贴板内容以下内容受时效性影响可能较大，请参照教程时间，自行更换版本，或沿用此版（可能有BUG）\n\n将其中 - VNCPASS&#x3D;YourPassword 中的 YourPassword 改为一个你自己喜欢的密码并记住。\n若使用nano编辑器则使用 Ctrl + X 退出编辑 若提示 Y&#x2F;N 请输入 Y 保存。然后会提示修改文件名 回车退出即可 不要修改。\n其他编辑器请自行保存并退出。\n使用 cat 命令检查内容\ncat docker-compose.yaml\n\n后文所有编辑的文件均建议检查，不再赘述若新手不习惯命令行操作，可参考以WinSCP为代表的远程文件管理软件，这里不进行教学\n\n此时检查屏幕中内容无误后按 ESC 退出，进行下一步。\n启动 Docker 镜像docker-compose up -d\n等待下载完成即可，中途不要关闭 SSH 窗口，耐心等待即可，文件约几个G。\nVNC 登录微信在网络上下载并安装 VNC Viewer（或其他能进行VNC连接的客户端）在上方 Enter a VNC Server address or search 处填入\n#你的VPS固定公网ip:5905#例如123.123.1.2:5905#注意「:」是英文字符 不要使用中文字符的「：」\n\n点击连接到此地址，此时你将会看到一个微信登录二维码，使用手机扫码登录注意，将此二维码截图后用手机微信的相册内扫码是不行的，必须使用摄像头扫码\n安装、创建必要文件及依赖apt-get install libopus0 ffmpeg libmagic1 python3-pip git libssl-devpip3 install -U git+https://github.com/ehForwarderBot/efb-telegram-master.gitpip3 install -U git+https://github.com/0honus0/python-comwechatrobot-http.gitpip3 install -U git+https://github.com/0honus0/efb-wechat-comwechat-slave.gitpip3 install lottiepip3 install cairosvg\n\n请一行一行依次执行 而不要全部一次输入\n\n然后进行配置文件的创建，此处可以一次性全部输入\nmkdir -p ~/.ehforwarderbot/profiles/ComWeChatmkdir -p ~/.ehforwarderbot/profiles/ComWeChat/blueset.telegrammkdir -p ~/.ehforwarderbot/profiles/ComWeChat/honus.comwechattouch ~/.ehforwarderbot/profiles/ComWeChat/config.yamltouch ~/.ehforwarderbot/profiles/ComWeChat/blueset.telegram/config.yamltouch ~/.ehforwarderbot/profiles/ComWeChat/honus.comwechat/config.yaml\n\n不要忘记发送最后一行\n\n主从端配置编辑 ~&#x2F;.ehforwarderbot&#x2F;profiles&#x2F;ComWeChat&#x2F;blueset.telegram&#x2F;config.yaml\nnano ~/.ehforwarderbot/profiles/ComWeChat/blueset.telegram/config.yaml\n\n在其中写入\ntoken: &quot;写机器人token&quot;admins:- 写管理员telegram用户ID\n\n将token和用户ID替换掉上文中的说明文字，例如\ntoken: &quot;ABC123QWE:123ADW123AWD&quot;admins:- 1234567654321\n\n编辑 ~&#x2F;.ehforwarderbot&#x2F;profiles&#x2F;ComWeChat&#x2F;config.yaml\nnano ~/.ehforwarderbot/profiles/ComWeChat/config.yaml\n\n在其中写入\nmaster_channel: blueset.telegramslave_channels:- honus.comwechat\n\n编辑 ~&#x2F;.ehforwarderbot&#x2F;profiles&#x2F;ComWeChat&#x2F;honus.comwechat&#x2F;config.yaml\nnano ~/.ehforwarderbot/profiles/ComWeChat/honus.comwechat/config.yaml\n\n在其中写入\ndir: &quot;/root/WeChat/Files/&quot;\n\n启动服务使用screen功能保证关闭SSH连接后 服务仍在运行\nscreen -S wechat\n\n在弹出的新终端窗口中输入\nehforwarderbot -p ComWeChat\n\n\n由于 VPS 一般位于海外，所以第一次登录后几天内被登出是正常的，因为 IP 地址不受信任\n\n重启服务在某些情况下，你需要重启你的服务，下面我来讲解一下。\n首先建议重启你的服务器，排除意外因素如果不愿意重启，请自行关闭之前打开的 screen 会话和 docker 镜像然后执行\ncd comwechatdocker-compose up -d\n\n此时再次打开 VNC Viewer 再次扫码登录或点击登录然后再次启动服务即可\nscreen -S wechat\n\n在弹出的新终端窗口中输入\nehforwarderbot -p ComWeChat\n\n关于机器人用法在此不进行详细说明，仅做简单解释\n假如你不做任何工作，所有信息都只会从机器人私聊发送到你的 Telegram 账号。\n为了解决这个问题，我们需要使用准备阶段准备的两个 Telegram 账号新建群组，然后将另一个账号踢出群组，将机器人添加至群组。\n接着使用\n/link\n\n回到机器人的私聊，选择你要绑定的对话，则该对话将被绑定至指定的群组\n建议使用下面的指令来更新头像及名称。\n/update_info\n\n\n特别注明：新加好友 &#x2F; 群聊 &#x2F; 备注 需要等待数据库自动更新，时间为 30 分钟一次，因此执行此命令报错时请先自查是否是新添加好友等问题\n\n此时你在此群组发送消息，将自动以你登录的微信为发言人在微信发送相同消息，接收到的消息则由机器人发送\n\n其他使用相关不再赘述，自行查阅其他教程或说明文档等\n\n尾声至此，教程完毕，若有问题请再三阅读教程后提问\n","categories":["研究"],"tags":["研究"]},{"title":"你好，世界！","url":"/2023/05/23/hello,world!/","content":"网站基本说明2023年5月23日 20:00，本站正式建立，使用Github Page作为服务提供商。本站属于个人性质网站，不存在主动盈利行为。\nFront-matter示例：\n---title: 你好，世界！date: 2023-05-23 20:57:13updated: 2023-05-23 20:57:13tags:     - &quot;建站&quot;categories:     - &quot;建站&quot;description: 建站时，测试用的文章thumbnail: /images/default_cover.webp  #首页缩略图、文章头图# expires: 2023-08-31 23:59:59  #超过本时间提示文章可能过时# excerpt: &quot;这里是显示的摘要，可不填，自动生成&quot;# sticky: 1 #数字越大文章越靠前---\n","categories":["建站"],"tags":["建站"]},{"title":"ArchLinux下安装带浏览器源的OBS","url":"/2023/10/12/linuxobsbrowser/","content":"起因\n在ArchLinux下通过pacman安装的obs-studio软件包默认是不在来源页包含浏览器源的选项支持的。而我们需要用到的时候就需要为OBS添加浏览器源的支持。虽然默认的obs-studio包不提供这个插件，但可以通过其他客户端或插件包添加。\n\n推荐方案1安装使用浏览器插件进行编译的官方包。\nyay -S obs-studio-git\n\n推荐方案2这是一款定制的客户端，提供浏览器插件以及浏览器停靠栏，还有其他改进。不过如果能够满足自己的需求的话，依然是官方包最佳。\nyay -S obs-studio-tytan652\n\n\n不推荐方案打包的支持浏览器插件集成的OBS\n#任选yay -S obs-studio-browseryay -S obs-linuxbrowser\n\n安装其中第一个版本的话：提供linuxbrowser旧插件。该插件可与默认客户端一起使用，但已被放弃且过时。\n安装其中第二个版本的话：编译可能要很久(大约10分钟)。\n参考：ArchLinux的Wiki页面\n","categories":["研究"],"tags":["研究"]},{"title":"ArchLinux下OBS捕获单应用音频的解决方案","url":"/2023/10/03/linuxobscapture/","content":"起因\n起因十分简单，我在几个月前转用ArchLinux作为主力系统使用，逐渐适应并喜爱上了Linux生态。然而Linux常常处于不被消费级软件重视的地位，这使得很多时候我们需要自己解决问题。比如我试图在Linux下直播我的游戏，但是同时我又要和朋友语音通话，为了不录入我自己和朋友的声音到直播中 社恐.gif 我开始按照Windows的思路试图捕获单个应用音频，此时我发现这项功能仅仅在Windows版本的OBS中进行测试，而Linux下是没有这个功能的，经过一番探索和交流，获得了两个比较泛用的方案。\n\n环境下面来介绍一下我的ArchLinux环境N卡、最新系统、AMD的CPU等等，这些不需要提，也不相关的内容。桌面环境KDE，渲染用的X11，这些有一点关系，但不大。音频系统Pipewire，这个很重要，因为本文仅针对Pipewire生效。\n方案一共有两种方案，下面我来分别介绍一下。\n\n我个人是比较推荐方案一的，两种方案各有优缺点，下面将详细说明。\n\n方案一 OBS插件\n使用Github开源的OBS插件obs-pipewire-audio-capture\n\n这种方案的优点是配置简单，缺点则是可能随着某次音频驱动的更新，该方案失效，当然可能性微乎其微，同时插件肯定也会跟进更新，因此基本没有什么缺点。\n环境需求1. WirePlumberArchLinux下安装WirePlumber的命令\nsudo pacman -S wireplumber\n\n\n前提：安装了pipewire才建议使用此方案ArchLinux安装pipewire的指令如下（可能不全）\n\npacman -S pipewire pipewire-pulse\n\n2. OBS 28.0或更高版本你可以直接使用pacman安装OBS\nsudo pacman -S obs-studio\n\n当然，如果是打算使用哔哩哔哩进行直播，又希望显示弹幕的话，多半会去安装弹幕工具，而弹幕工具一般需要添加浏览器来源。\n推荐：安装使用浏览器插件进行编译的官方包。\nyay -S obs-studio-git\n\n不推荐：打包的支持浏览器插件集成的OBS安装这个版本的话，编译可能要很久(大约10分钟)这个版本将ffmpeg替换为了ffmpeg-obs，这可能导致很多问题，维护需要大量精力。\nyay -S obs-studio-browser \n\n\n安装、使用插件从obs-pipewire-audio-capture仓库的发行版下载linux-pipewire-audio-[版本号].tar.gz文件解压到OBS的插件目录，一般为 ~&#x2F;.config&#x2F;obs-studio&#x2F;plugins&#x2F;解压后重启OBS或重启电脑，即可在OBS添加来源处看到可以添加的三个来源\n这三个来源我们只需要使用第一个 应用音频捕获(PipeWire) 即可。\n添加来源后，第一个选项 Match Priority 不需要修改，修改下方 Application 处，将需要捕获的应用加入。\n\n如果发现找不到需要的那个应用，再尝试修改 Match Priority 的选项，这会改变获取应用的方式。\n\n下面的可勾选项的效果为，录制除选中应用音频之外的全部音频（反选音频）。\n至此，插件的安装和使用就介绍完毕了。\n常见问题最常见的问题就是程序并没有成功的录制应用音频了，此时请检查环境需求中的WirePlumber是否被成功安装？以及你的音频驱动是否是PipeWire。如果发现没有存在这些问题，检查安装后是否重启过电脑？若没有则重启再尝试。\n如果还是不行，请参考方案二。\n方案二 音频跳线这是一个比较麻烦的方法，这里不会详细介绍。但我会对简单的使用方法进行说明。\n首先，在OBS来源中添加 JACK 输入客户端 并勾选 启动 JACK 服务器。然后，安装类似 Helvum 的音频跳线软件，或通过其他方式进行音频跳线。\nHelvum界面预览，一团糟 当然，这是因为我有独立声卡，外加配置了后期音频处理的结果。Helvum\n将需要捕获的应用与 JACK输入 相连，此时OBS中 JACK 输入客户端 将捕获到被连接的应用音频。\n缺点：每次需要手动配置，但可以通过开机执行一些指令，或添加一些配置文件来固化这个操作。优点：没有其他解决方案时的万能解，紧急情况没有安装插件的救济措施，以及也许可能更低的音频延迟\n总结我个人还是推荐方案一，简单好用，也能够满足大部分情况了。至于方案二，留作一个备用的应急解决方案好了，当然如果你有强烈的强迫症或者奇怪的精神洁癖，你可以考虑深入研究一下…\n","categories":["研究"],"tags":["研究"]}]