<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>「二」Python3笔记</title>
      <link href="/2023/06/04/4-PythonNotes2/"/>
      <url>/2023/06/04/4-PythonNotes2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：本文仅针对Windows11环境下，使用VSCode编辑器进行基础的Python3的学习、练习。出现问题请先检查自己的系统版本与软件版本。</p></blockquote><hr><h1 id="Python3基础语法"><a href="#Python3基础语法" class="headerlink" title="Python3基础语法"></a>Python3基础语法</h1><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><p>默认情况下，Python 3 源码文件以 <strong>UTF-8</strong> 编码，所有字符串都是 <strong>Unicode</strong> 字符串</p><p><strong>简体中文</strong>语言环境的<strong>Windows系统</strong>下，命令提示符的默认编码为<strong>GBK</strong>，而非<strong>UTF-8</strong>，因此请务必使用<strong>VSCode</strong>等<strong>专业代码工具</strong>进行代码编写，<strong>而非记事本</strong>！</p><blockquote><p>你可以在<strong>代码前</strong>添加<strong>声明</strong>来修改解释器对于本文件<strong>默认使用的编码</strong>，如下展示了三种常用写法表示使用<strong>GBK编码</strong>进行解释。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: GBK -*-</span><br><span class="line"># coding=GBK</span><br><span class="line"># coding: GBK</span><br></pre></td></tr></table></figure><h2 id="标识符与保留字"><a href="#标识符与保留字" class="headerlink" title="标识符与保留字"></a>标识符与保留字</h2><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a><strong>标识符</strong></h3><p>即常用的变量名、类名等等，要求如下：</p><p>1.使用 <code>字母</code> 或 <code>下划线</code> 作为首字符。</p><p>2.使用 <code>字母</code> <code>数字</code> <code>下划线</code> 作为其余字符。</p><p>3.区分大小写、没有长度限制、不能使用Python保留字</p><h3 id="保留字"><a href="#保留字" class="headerlink" title="保留字"></a>保留字</h3><p>即常说的<strong>关键字</strong>，不能作为<strong>标识符</strong>名称使用。</p><p>目前的<strong>全部关键字</strong>可以通过如下命令来显示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import keyword</span><br><span class="line">print(keyword.kwlist)</span><br></pre></td></tr></table></figure><p>输出结果如下：</p><blockquote><p>[‘False’, ‘None’, ‘True’, ‘and’, ‘as’, ‘assert’, ‘async’, ‘await’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’, ‘in’, ‘is’, ‘lambda’, ‘nonlocal’, ‘not’, ‘or’, ‘pass’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]</p></blockquote><p>方括号内，每个单引号中都是一个Python3保留字，以后会讲解其中大部分保留字的作用。</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><h3 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h3><p>Python3中单行注释以 <code>#</code> 开头，下面是一个例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 我是一行注释，我不会被解释器解释，可以写入任何字符，直到下一行为止</span><br><span class="line">print(&quot;Hello, World!&quot;) # 也可以在代码后进行注释，直到下一行为止</span><br></pre></td></tr></table></figure><p>输出结果为：<br><code>Hello, World!</code></p><h3 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h3><p>多行注释可以使用多个单行注释，或者直接使用多行注释符号 <code>&#39;&#39;&#39;</code> 或 <code>&quot;&quot;&quot;</code>，下面是一个例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 第一个注释</span><br><span class="line"># 第二个注释</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">第三个注释</span><br><span class="line">第四个注释</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"> </span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">第五个注释</span><br><span class="line">第六个注释</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">print (&quot;Hello, World!&quot;)</span><br></pre></td></tr></table></figure><p>输出结果为：<br><code>Hello, World!</code></p><h2 id="行与缩进"><a href="#行与缩进" class="headerlink" title="行与缩进"></a>行与缩进</h2><blockquote><p>Python<strong>最鲜明</strong>的<strong>特点</strong>就是其通过<strong>缩进</strong>来表示代码块，<strong>无需且不能</strong>使用大括号来表示。</p></blockquote><p>Python中，缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数。</p><blockquote><p>然而，建议使用四个空格进行缩进，如果可以，进行重要代码编写时请不要使用制表符</p></blockquote><p>下面是一个例子：</p>]]></content>
      
      
      <categories>
          
          <category> 研究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 研究 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「一」Python3笔记</title>
      <link href="/2023/06/01/3-PythonNotes1/"/>
      <url>/2023/06/01/3-PythonNotes1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：本文仅针对Windows11环境下，使用VSCode编辑器进行基础的Python3的学习、练习。出现问题请先检查自己的系统版本与软件版本。</p></blockquote><hr><h1 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h1><h3 id="检查电脑是否已有Python环境"><a href="#检查电脑是否已有Python环境" class="headerlink" title="检查电脑是否已有Python环境"></a>检查电脑是否已有Python环境</h3><p>使用快捷键 <kbd>Windows</kbd> + <kbd>R</kbd> ，输入 <strong>wt</strong> ，回车进入<strong>Windows Terminal</strong>，选择打开 <strong>「命令提示符」</strong></p><p>输入指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></table></figure><p>如下图所示提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; Python 3.11.3</span><br></pre></td></tr></table></figure><p><img src="https://img.514.live/img/20230601183545.png"></p><p>即表明你的电脑存在版本号为3.11.3的Python环境。</p><p>此时请注意观察版本号，Python2与2020年就停止了更新，<strong>请务必使用Python3进行学习，因为Python3与Python2的语法有一定区别</strong>。</p><blockquote><p>后续文章中提及的Python均为Python3，若不强调为Python2，则一般默认Python为Python3。</p></blockquote><p>如果发现拥有Python3.5以前的版本，都建议进行更新，最简单的方法就是直接完全卸载当前的旧版本Python，再重新安装最新的Python3版本。</p><p>截止至本文发布时，博主已知的Python3最新版本号为<strong>3.11.3</strong>。</p><h2 id="安装Python3"><a href="#安装Python3" class="headerlink" title="安装Python3"></a>安装Python3</h2><p>这里只推荐两种安装方式</p><h3 id="Microsoft-Store安装"><a href="#Microsoft-Store安装" class="headerlink" title="Microsoft Store安装"></a>Microsoft Store安装</h3><p><img src="https://img.514.live/img/202306011853581.png"></p><p>在微软商店中搜索Python3，寻找到最新的版本(例如3.11)进行安装即可。</p><h3 id="官网安装"><a href="#官网安装" class="headerlink" title="官网安装"></a>官网安装</h3><p>进入<a href="https://www.python.org/downloads/">Python官网</a>，点击如下图所示的<strong>Download Python 3.xx.x</strong></p><p><img src="https://img.514.live/img/202306011903942.png"></p><p>下载完成后运行下载下来的文件，依照需求安装即可，请不要忘记配置环境变量。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>摆烂，VSCode内随便点点就行了</p><hr><h1 id="Python3简介"><a href="#Python3简介" class="headerlink" title="Python3简介"></a>Python3简介</h1><p><strong>Python</strong>是一种<strong>解释型</strong>，<strong>交互式</strong>，<strong>面向对象语言。</strong></p><p><strong>解释型</strong>：无需进行编译，直接通过解释器解释</p><p><strong>交互式</strong>：可以在Python命令行中直接执行代码</p><p><strong>面向对象</strong>：这意味着Python支持面向对象的风格或代码封装在对象的编程技术</p>]]></content>
      
      
      <categories>
          
          <category> 研究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 研究 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于东京的天气...</title>
      <link href="/2023/05/25/2-tokyounotenki/"/>
      <url>/2023/05/25/2-tokyounotenki/</url>
      
        <content type="html"><![CDATA[<h1 id="東京都の天気"><a href="#東京都の天気" class="headerlink" title="東京都の天気"></a>東京都の天気</h1><h3 id="据我到东京这么长时间以来的观察，东京的天气大概只有两种…"><a href="#据我到东京这么长时间以来的观察，东京的天气大概只有两种…" class="headerlink" title="据我到东京这么长时间以来的观察，东京的天气大概只有两种…"></a>据我到东京这么长时间以来的观察，东京的天气大概只有两种…</h3><h2 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h2><p><img src="https://img.514.live/img/202305252004824.png"><br>一种是这样的，很凉快，很好看，风不算大。</p><h2 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h2><p><img src="https://img.514.live/img/tokyounotenki2.png"><br>另一种就是这样的，相当的亮，风特别特别大，但是也不怎么热。</p><p><del>其实最大的特点是云动的特别快</del></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好，世界！</title>
      <link href="/2023/05/23/1-hello,world!/"/>
      <url>/2023/05/23/1-hello,world!/</url>
      
        <content type="html"><![CDATA[<h1 id="网站基本说明"><a href="#网站基本说明" class="headerlink" title="网站基本说明"></a>网站基本说明</h1><p>2023年5月23日 20:00，本站正式建立，使用Github Page作为服务提供商。<br>本站属于个人性质网站，不存在主动盈利行为。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;new post&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 建站 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
