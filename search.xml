<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ArchLinux下OBS捕获单应用音频的解决方案</title>
      <link href="/archives/2023/3-linuxobscapture/"/>
      <url>/archives/2023/3-linuxobscapture/</url>
      
        <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><blockquote><p>起因十分简单，我在几个月前转用ArchLinux作为主力系统使用，逐渐适应并喜爱上了Linux生态。然而Linux常常处于不被消费级软件重视的地位，这使得很多时候我们需要自己解决问题。比如我试图在Linux下直播我的游戏，但是同时我又要和朋友语音通话，为了不录入我自己和朋友的声音到直播中 <del>社恐.gif</del> 我开始按照Windows的思路试图捕获单个应用音频，此时我发现这项功能仅仅在Windows版本的OBS中进行测试，而Linux下是没有这个功能的，经过一番探索和交流，获得了两个比较泛用的方案。</p></blockquote><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>下面来介绍一下我的ArchLinux环境<br>N卡、最新系统、AMD的CPU等等，这些不需要提，也不相关的内容。桌面环境KDE，渲染用的X11，这些有一点关系，但不大。<br><strong>音频系统Pipewire</strong>，这个很重要，因为<strong>本文仅针对Pipewire生效</strong>。</p><h1 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h1><p>一共有两种方案，下面我来分别介绍一下。</p><blockquote><p>我个人是比较推荐<strong>方案一</strong>的，两种方案各有优缺点，下面将详细说明。</p></blockquote><h2 id="方案一-OBS插件"><a href="#方案一-OBS插件" class="headerlink" title="方案一 OBS插件"></a>方案一 OBS插件</h2><blockquote><p>使用Github开源的OBS插件<a href="https://github.com/dimtpap/obs-pipewire-audio-capture"><strong>obs-pipewire-audio-capture</strong></a></p></blockquote><p>这种方案的优点是配置简单，缺点则是可能随着某次音频驱动的更新，该方案失效，当然可能性微乎其微，同时插件肯定也会跟进更新，因此基本没有什么缺点。</p><h3 id="环境需求"><a href="#环境需求" class="headerlink" title="环境需求"></a>环境需求</h3><h3 id="1-WirePlumber"><a href="#1-WirePlumber" class="headerlink" title="1. WirePlumber"></a><strong>1. WirePlumber</strong></h3><p>ArchLinux下安装WirePlumber的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S wireplumber</span><br></pre></td></tr></table></figure><blockquote><p>前提：安装了pipewire才建议使用此方案<br>ArchLinux安装pipewire的指令如下（可能不全）</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S pipewire pipewire-pulse</span><br></pre></td></tr></table></figure><h3 id="2-OBS-28-0或更高版本"><a href="#2-OBS-28-0或更高版本" class="headerlink" title="2. OBS 28.0或更高版本"></a><strong>2. OBS 28.0或更高版本</strong></h3><p>你可以直接使用pacman安装OBS</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S obs-studio</span><br></pre></td></tr></table></figure><p>当然，如果是打算使用哔哩哔哩进行直播，又希望显示弹幕的话，多半会去安装弹幕工具<br>那么你也许会需要用到支持<a href="https://aur.archlinux.org/packages/obs-studio-browser">浏览器插件集成的OBS</a></p><p><strong>这里推荐有时间的人直接安装这个版本</strong>，编译可能要很久(大约10分钟)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S obs-studio-browser </span><br></pre></td></tr></table></figure><h3 id="安装、使用插件"><a href="#安装、使用插件" class="headerlink" title="安装、使用插件"></a>安装、使用插件</h3><p>从<a href="https://github.com/dimtpap/obs-pipewire-audio-capture"><strong>obs-pipewire-audio-capture</strong></a>仓库的发行版下载<strong>linux-pipewire-audio-[版本号].tar.gz</strong>文件<br>解压到OBS的插件目录，一般为 <strong>~&#x2F;.config&#x2F;obs-studio&#x2F;plugins&#x2F;</strong><br>解压后重启OBS或重启电脑，即可在OBS添加来源处看到可以添加的三个来源</p><p><img src="https://pic.514.live/img/obs%E6%8F%92%E4%BB%B6%E6%88%AA%E5%9B%BE.png"></p><p>这三个来源我们只需要使用第一个 <strong>应用音频捕获(PipeWire)</strong> 即可。</p><p>添加来源后，第一个选项 <strong>Match Priority</strong> 不需要修改，修改下方 <strong>Application</strong> 处，将需要捕获的应用加入。</p><blockquote><p>如果发现找不到需要的那个应用，再尝试修改 <strong>Match Priority</strong> 的选项，这会改变获取应用的方式。</p></blockquote><p>下面的可勾选项的效果为，录制除选中应用音频之外的全部音频（反选音频）。</p><p>至此，插件的安装和使用就介绍完毕了。</p><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><p>最常见的问题就是程序并没有成功的录制应用音频了，此时请检查环境需求中的WirePlumber是否被成功安装？以及你的音频驱动是否是PipeWire。<br>如果发现没有存在这些问题，检查安装后是否重启过电脑？若没有则重启再尝试。</p><p>如果还是不行，请参考方案二。</p><h2 id="方案二-音频跳线"><a href="#方案二-音频跳线" class="headerlink" title="方案二 音频跳线"></a>方案二 音频跳线</h2><p>这是一个比较麻烦的方法，这里不会详细介绍。<br>但我会对简单的使用方法进行说明。</p><p>首先，在OBS来源中添加 <strong>JACK 输入客户端</strong> 并勾选 <strong>启动 JACK 服务器</strong>。<br>然后，安装类似 <strong>Helvum</strong> 的音频跳线软件，或通过其他方式进行音频跳线。</p><p>Helvum界面预览，<del>一团糟</del> 当然，这是因为我有独立声卡，外加配置了后期音频处理的结果。<br><img src="https://pic.514.live/img/helvum%E6%88%AA%E5%9B%BE.png"></p><p>将需要捕获的应用与 <strong>JACK输入</strong> 相连，此时OBS中 <strong>JACK 输入客户端</strong> 将捕获到被连接的应用音频。</p><p>缺点：每次需要手动配置，但可以通过开机执行一些指令，或添加一些配置文件来固化这个操作。<br>优点：没有其他解决方案时的万能解，紧急情况没有安装插件的救济措施，以及也许<strong>可能更低</strong>的音频延迟</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>我个人还是推荐方案一，简单好用，也能够满足大部分情况了。<br>至于方案二，留作一个备用的应急解决方案好了，当然如果你有强烈的强迫症或者奇怪的精神洁癖，你可以考虑深入研究一下…</p>]]></content>
      
      
      <categories>
          
          <category> 研究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 研究 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于东京的天气...</title>
      <link href="/archives/2023/2-tokyounotenki/"/>
      <url>/archives/2023/2-tokyounotenki/</url>
      
        <content type="html"><![CDATA[<h1 id="東京都の天気"><a href="#東京都の天気" class="headerlink" title="東京都の天気"></a>東京都の天気</h1><h3 id="据我到东京这么长时间以来的观察，东京的天气大概只有两种…"><a href="#据我到东京这么长时间以来的观察，东京的天气大概只有两种…" class="headerlink" title="据我到东京这么长时间以来的观察，东京的天气大概只有两种…"></a>据我到东京这么长时间以来的观察，东京的天气大概只有两种…</h3><h2 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h2><p><img src="https://pic.514.live/img/202305252004824.png"><br>一种是这样的，很凉快，很好看，风不算大。</p><h2 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h2><p><img src="https://pic.514.live/img/tokyounotenki2.png"><br>另一种就是这样的，相当的亮，风特别特别大，但是也不怎么热。</p><p><del>其实最大的特点是云动的特别快</del></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好，世界！</title>
      <link href="/archives/2023/1-hello,world!/"/>
      <url>/archives/2023/1-hello,world!/</url>
      
        <content type="html"><![CDATA[<h1 id="网站基本说明"><a href="#网站基本说明" class="headerlink" title="网站基本说明"></a>网站基本说明</h1><p>2023年5月23日 20:00，本站正式建立，使用Github Page作为服务提供商。<br>本站属于个人性质网站，不存在主动盈利行为。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;new post&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 建站 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
